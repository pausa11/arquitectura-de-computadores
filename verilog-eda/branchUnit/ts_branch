`timescale 1ns/1ps

module tb_Branch_unit;

    // Señales de prueba
    logic [31:0] In1;
    logic [31:0] In2;
    logic  [4:0] BrOp;
    logic        NextPCSrc;

    // Instanciación del Branch_unit
    Branch_unit uut (
        .In1       (In1),
        .In2       (In2),
        .BrOp      (BrOp),
        .NextPCSrc (NextPCSrc)
    );

    initial begin
        // Encabezado de resultados
        $display("Time | BrOp  | In1  | In2  | NextPCSrc");
        $display("----------------------------------------");

        // Prueba BEQ (4'b1000) con salto condicional
        In1 = 32'd10; In2 = 32'd10; BrOp = 5'b01000; #10;
        $display("%4dns | %b | %0d | %0d | %b", $time, BrOp, In1, In2, NextPCSrc);

        // Prueba BNE (4'b1001)
        BrOp = 5'b01001; #10; $display("%4dns | %b | %0d | %0d | %b", $time, BrOp, In1, In2, NextPCSrc);

        // Prueba BLT (4'b1100)
        In1 = -5; In2 = 32'd5; BrOp = 5'b01100; #10;
        $display("%4dns | %b | %0d | %0d | %b", $time, BrOp, In1, In2, NextPCSrc);

        // Prueba BGE (4'b1101)
        BrOp = 5'b01101; #10; $display("%4dns | %b | %0d | %0d | %b", $time, BrOp, In1, In2, NextPCSrc);

        // Prueba BLTU (4'b1110)
        In1 = 32'hFFFF_FFFF; In2 = 32'd1; BrOp = 5'b01110; #10;
        $display("%4dns | %b | %h | %0d | %b", $time, BrOp, In1, In2, NextPCSrc);

        // Prueba BGEU (4'b1111)
        BrOp = 5'b01111; #10; $display("%4dns | %b | %h | %0d | %b", $time, BrOp, In1, In2, NextPCSrc);

        // Prueba salto incondicional (bit4=1)
        BrOp = 5'b10000; #10;
        $display("%4dns | %b (uncond) | %0d | %0d | %b", $time, BrOp, In1, In2, NextPCSrc);

        // Prueba sin salto (bits[4:3]==00)
        BrOp = 5'b00000; #10;
        $display("%4dns | %b (no branch) | %0d | %0d | %b", $time, BrOp, In1, In2, NextPCSrc);

        // Fin de simulación
        #10 $finish;
    end

endmodule