`timescale 1ns/1ps

module tb_ALU;

    // Se침ales de prueba
    logic [31:0] A;
    logic [31:0] B;
    logic  [3:0] ALUOp;
    logic [31:0] Alu_out;

    // Instanciaci칩n de la ALU
    ALU uut (
        .A      (A),
        .B      (B),
        .ALUOp  (ALUOp),
        .Alu_out(Alu_out)
    );

    // Generaci칩n de vectores de prueba
    initial begin
        // Mostrar encabezado
        $display("Time | ALUOp | A          | B          | Alu_out");
        $display("------------------------------------------------");

        // Prueba ADD
        A      = 32'd10; B = 32'd5;  ALUOp = 4'b0000; #10;
        $display("%4dns | %b   | %0d       | %0d       | %0d", $time, ALUOp, A, B, Alu_out);

        // Prueba SUB
        ALUOp = 4'b1000; #10;
        $display("%4dns | %b   | %0d       | %0d       | %0d", $time, ALUOp, A, B, Alu_out);

        // Prueba SLL
        A      = 32'hF0F0F0F0; B = 32'd4; ALUOp = 4'b0001; #10;
        $display("%4dns | %b   | %h | %0d       | %h", $time, ALUOp, A, B, Alu_out);

        // Prueba SLT y SLTU
        A      = -1; B = 32'd1;       ALUOp = 4'b0010; #10; // signed
        $display("%4dns | %b   | %0d      | %0d       | %0d", $time, ALUOp, A, B, Alu_out);
        ALUOp = 4'b0011; #10;           // unsigned
        $display("%4dns | %b   | %0d      | %0d       | %0d", $time, ALUOp, A, B, Alu_out);

        // Prueba XOR, OR, AND
        A      = 32'hA5A5A5A5; B = 32'h5A5A5A5A;
        ALUOp = 4'b0100; #10; $display("%4dns | %b   | %h | %h | %h", $time, ALUOp, A, B, Alu_out);
        ALUOp = 4'b0110; #10; $display("%4dns | %b   | %h | %h | %h", $time, ALUOp, A, B, Alu_out);
        ALUOp = 4'b0111; #10; $display("%4dns | %b   | %h | %h | %h", $time, ALUOp, A, B, Alu_out);

        // Prueba shifts SRL y SRA
        A      = 32'hF0000000; B = 32'd4;
        ALUOp = 4'b0101; #10; $display("%4dns | %b   | %h | %0d       | %h", $time, ALUOp, A, B, Alu_out);
        ALUOp = 4'b1101; #10; $display("%4dns | %b   | %h | %0d       | %h", $time, ALUOp, A, B, Alu_out);

        // Fin de la simulaci칩n
        #10 $finish;
    end

endmodule